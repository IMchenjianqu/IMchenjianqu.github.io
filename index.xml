<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据与方法</title>
    <link>https://IMchenjianqu.github.io/</link>
    <description>Recent content on 数据与方法</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 16 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://IMchenjianqu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>biosonics使用（内业）</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/biosonics%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/biosonics%E4%BD%BF%E7%94%A8/</guid>
      <description>通过声纳侧扫方法，获取水下物体（植被）的株高覆盖度参数，内业处理方法
 在外业的VisualAcquisition中获取的数据导入VisualHabitat中：
设置参数（分贝等），对数据进行人工识别：
导出csv及kml类型数据
在谷歌地球中打开kml，kml的属性即为株高等参数</description>
    </item>
    
    <item>
      <title>潮位数据</title>
      <link>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%BD%AE%E4%BD%8D%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%BD%AE%E4%BD%8D%E6%95%B0%E6%8D%AE/</guid>
      <description>在进行biosonics侧扫时，需用到当前时刻潮位，以使仪器准确性更好
 可通过计算，获取当前潮位  也可通过网络爬虫进行潮位数据的爬取
爬取数据源：国家海洋科学数据中心http://mds.nmdis.org.cn/pages/home.html
可爬取多天的潮位数据，整理成excel表，也可爬取特定时刻
为使得使用更加方便，增加GUI 准确性检验  源码链接</description>
    </item>
    
    <item>
      <title>买入及卖出</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E4%B9%B0%E5%85%A5%E5%8F%8A%E5%8D%96%E5%87%BA/</link>
      <pubDate>Mon, 09 Aug 2021 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E4%B9%B0%E5%85%A5%E5%8F%8A%E5%8D%96%E5%87%BA/</guid>
      <description>探讨股票等产品的买入卖出时间段及选择，以达盈利目的
 买入卖出时间段 1.根据市场变动的信号（类似量化交易），选择买入卖出时间，在概率、数学期望层面上获胜
例 北向资金的变化，导致市场变动
通过爬虫在tushare、香港交易所、东方财经网等财经资讯网站爬取流入上、深交易所资金量、此后几天开盘及收盘总价，进行整理后得出
因此，结合其他一些信号，运用知网上相关机器学习应用在交易上的论文方法，提高概率增加赢钱的数学期望，选择合适时间买入卖出
免费获取市场信息，但是有积分门槛 https://tushare.pro/
买入板块 作为散户，最可靠的信息来源就是国家发布的消息，在国家统计局、发改委、海关总署、人民银行等网站查找今年或某段时间的热门板块（例，国家统计局可以看CPI、PPI等，每周两更）
传送门 http://www.pbc.gov.cn/ http://www.customs.gov.cn/ https://www.ndrc.gov.cn/?code=&amp;amp;state=123 http://www.stats.gov.cn/
 基金 由于股票过于昂贵，而基金则较为便宜。另一方面，基金作为股票的组合，只需以相同方法分析基金，并多了解基金公司、经理，多考虑则可同理购买售卖。
 实践 由于时间、资金问题，我的策略是尽早选择某段时间热门板块，然后持有某些基金一段较长的时间
 待续 还需进行更多实验</description>
    </item>
    
    <item>
      <title>raspberry pi部署</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/raspberry_pi/</link>
      <pubDate>Tue, 13 Jul 2021 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/raspberry_pi/</guid>
      <description>树莓派（raspberry pi）作为微电脑，大小如同卡片，但“五脏俱全”，常见的树莓派项目有魔镜、NAS、机器人等。可运行Linux等系统，趁毕业之际，捡了一块，对其进行简单部署，可用于各种实际需求。
部分项目网站 https://shumeipai.nxez.com/ https://www.douban.com/note/609506167/
 001.系统部署 1.TF卡烧制 通过imager_1.5.exe，读卡器等工具，将想要的系统烧制至TF卡中
 2.通过插入外设部署 插入显示器、键鼠等外设进行部署
 3.通过ssh方式部署 通过读卡器，在电脑中打开制作的TF卡，在根目录找到cmdline，打开，添加任意IP，例如ip=192.168.137.100
在网络适配器中，将默认英特网以外的网络进行禁用，对默认英特网连接进行属性设置，禁用ipv6，将ip地址改为，如192.168.137.101
通过网线将插入TF卡的树莓派与电脑相连
win R，打开cmd，输入ipconfig查看本机ip，应为修改后的192.168.137.101，ping树莓派，成功后打开putty进行设置
输入树莓派IP，默认账号密码为：pi，raspberry，进入shell后（linux），输入sudo su，获取管理员权限，设置部署VNC
通过VNC打开树莓派的图形界面，进行设置
 4.关机 使用shutdown
 注 硬件材料：树莓派（3B、3B+、4B），tf卡，读卡器，电脑，网线，键鼠，电源线等
软件材料：以下链接中提供tf卡烧制，VNC等工具，以及树莓派官方系统
复制这段内容后打开百度网盘手机App，操作更方便哦 链接：https://pan.baidu.com/s/1hITl62ZoXQA0LmiFugDEYw 提取码：m5wv</description>
    </item>
    
    <item>
      <title>GEE数据</title>
      <link>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/gee%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/gee%E6%95%B0%E6%8D%AE/</guid>
      <description>注册并登陆https://earthengine.google.com/&amp;ndash;进入editor界面
注：由于审核是人工审核，最好使用教育邮箱进行注册
例：左侧脚本中的dataset中找到需要的遥感数据，进行使用。如果通过python的API端口，则拷贝其名字，使用ee进行使用
例：editor界面也包含一些分析方法
例：也可以在右侧上传自己的数据进行分析处理
 由于网页版语言为Javascript，但*用python较多，因此常使用其提供的python API接口使用遥感数据
注：需先把电脑端口设置成与梯子端口一致，否则出现winerror 1060，或time out error
如图，我梯子端口为10809，设置完成后，访问无问题
为了更好展示，下面使用jupyter notebook
conda activate gee jupyter notebook conda的pip命令需要加！，如
!pip install geemap !pip install ee 通过editor界面找到自己所需数据名称，使用ee进行添加
如图，add了Landsat7与DEM数据层
当然，如谷歌卫星图，ESRI底图，道路图等基本地图均可使用。</description>
    </item>
    
    <item>
      <title>未整理的数据</title>
      <link>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%9C%AA%E6%95%B4%E7%90%86%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%9C%AA%E6%95%B4%E7%90%86%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
      <description>一些书籍、实战项目
链接：https://pan.baidu.com/s/11Aro6LNtr-FG8PUwBlpAQg 提取码：diw5 &amp;ndash;来自百度网盘超级会员V1的分享
 主要包括matlab、python等</description>
    </item>
    
    <item>
      <title>海藻生物量评估系统v1.0</title>
      <link>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%B5%B7%E8%97%BB%E7%94%9F%E7%89%A9%E9%87%8F%E8%AF%84%E4%BC%B0%E7%B3%BB%E7%BB%9Fv1.0/</link>
      <pubDate>Sat, 19 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%B5%B7%E8%97%BB%E7%94%9F%E7%89%A9%E9%87%8F%E8%AF%84%E4%BC%B0%E7%B3%BB%E7%BB%9Fv1.0/</guid>
      <description>1.系统概述
1.1系统用途 “潮间带海藻生物量评估系统 v1.0”主要用于海洋调查中的潮间带调查，目标对象为大型海藻。主要应用RGB影像对潮间带海藻的生物量进行反演评估，减少海洋调查中投入大量的人力物力，同时减少由于大范围调查导致的生态破坏。该系统目前能进行反演的藻种主要有中国潮间带常见的三种优势藻种：孔石莼、鼠尾藻、羊栖菜。本系统将原位调查与机器学习方法进行结合，具有大众化、高效、环保的优点，且未来将继续探索其他海藻的反演模型，以期为潮间带调查提供新视角。
1.2功能概述 操作员可以通过RGB影像得知海藻生物量，而不需要在实地对海藻进行采集，也不需要对采集的海藻进行生物量的测定； 本系统不需要过高的硬件设施，具有大众化、高效的特点，操作人员只需按操作流程，将数据处理完毕即可使用。
1.3运行环境 硬件：Intel i5、16G内存、500G硬盘 操作系统：windows7、windows10等
1.4软件下载 当前版本由数据与方法 (imchenjianqu.github.io)向用户提供，用户可以在计算机的编译器中使用该系统
2.功能介绍
2.1RGB影像处理 可对目标影像进行光谱特征参数的提取（包括24个特征参数R、G、B、r、g、b、Exg、NGBVI、GBRI、VEGI、NPCI、RGBVI、RGRI、RGMPI、RBRI、RBMPI、RBMI、RGMI、RGPI、RBPI、GBPI、GBMI、VDVI、VARI）及获取灰度共生矩阵，获得纹理特征（包括27个特征参数Mean_R、Variance_R、Homogeneity_R、Contrast_R、Second Moment_R、Entropy_R、Correlation_R、ASM_R、IDM_R、Mean_G、Variance_G、Homogeneity_G、Contrast_G、Second Moment_G、Entropy_G、Correlation_G、ASM_G、IDM_G、Mean_B、Variance_B、Homogeneity_B、Contrast_B、Second Moment_B、Entropy_B、Correlation_B、ASM_B、IDM_B），并将结果输出到特定文件夹的csv文件中。
2.2三个机器学习模型对生物量进行初步预测（网格搜索，CV=4）
2.3得到每个特征的贡献率及皮尔逊相关系数进行参数筛选
2.4得到最优模型预测结果（孔石莼[R20.905]、鼠尾藻[R20.881]、羊栖菜[R20.821]）
3.版本更新
3.1更多的藻类模型及其他机器学习模型
3.2深度学习模型
下载地址：</description>
    </item>
    
    <item>
      <title>SVM、XGBoost及其融合模型（voting）在分类上的效果</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svmxgboost%E5%8F%8A%E5%85%B6%E8%9E%8D%E5%90%88%E6%A8%A1%E5%9E%8Bvoting%E5%9C%A8%E5%88%86%E7%B1%BB%E4%B8%8A%E7%9A%84%E6%95%88%E6%9E%9C/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svmxgboost%E5%8F%8A%E5%85%B6%E8%9E%8D%E5%90%88%E6%A8%A1%E5%9E%8Bvoting%E5%9C%A8%E5%88%86%E7%B1%BB%E4%B8%8A%E7%9A%84%E6%95%88%E6%9E%9C/</guid>
      <description>1.将光谱数据通过单因素方差分析后，选取P值较小（差异显著）的参数，每种藻选择前20个，一共三种藻，添加随机数random，打乱顺序 2.简单计算每个参数间的相关性，进行观察 3.计算两种模型的预测结果（左），计算两种模型通过voting算法融合的预测结果（右） 4.模型融合后，准确率显著提高
注 python代码如下：
# 数据处理 import numpy as np import pandas as pd # 可视化 import matplotlib.pyplot as plt import seaborn as sns # 机器学习 from sklearn.preprocessing import LabelEncoder from sklearn.preprocessing import StandardScaler from sklearn.metrics import accuracy_score from sklearn.model_selection import cross_val_score from sklearn.model_selection import KFold from sklearn.model_selection import GridSearchCV from sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegression from sklearn.neighbors import KNeighborsClassifier from sklearn.svm import SVC from sklearn.tree import DecisionTreeClassifier from sklearn.</description>
    </item>
    
    <item>
      <title>海洋数据</title>
      <link>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%B5%B7%E6%B4%8B%E6%95%B0%E6%8D%AE-%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%B5%B7%E6%B4%8B%E6%95%B0%E6%8D%AE-%E6%9B%B4%E6%96%B0/</guid>
      <description>登陆 https://marine.copernicus.eu/寻找适合数据 （其中包括0.083°×0.083°分辨率的海水温度、盐度、流速，有效波高、风速等，0.5°×0.5°的叶绿素a、透明度等数据）
范围为global，时间为present(2000（不等）-present)
选择合适范围、时间、水层后，下载数据
若为模式数据model,分别通过以下IDL读取
 更新： 此前IDL中仅能读取流、盐、温、波高、风等数据 此处更新读取其他更多的数据（.nc），如浮游生物在海水中以碳的形式表达的质量含量（zooc，g m-2）、透明度&amp;hellip;
主要通过matlab进行半自动化提取
通过ncdisp对目标数据进行观察，具体思路是通过创建元胞组将经纬度读取成n×n的cell，再把z值（透明度，溶氧&amp;hellip;）同样读取成cell，再整合成n*n行，1列的cell，进行串联及输出 注 完整matlab代码如下
ncdisp(&amp;#39;1.nc&amp;#39;) %time = ncread(&amp;#39;1.nc&amp;#39;,&amp;#39;time&amp;#39;) x = ncread(&amp;#39;1.nc&amp;#39;,&amp;#39;latitude&amp;#39;); y = ncread(&amp;#39;1.nc&amp;#39;,&amp;#39;longitude&amp;#39;); %cont = 61*61; xy = cell(61) for m = 1:61 for n = 1:61 xy{m,n} = [y(m),x(n)] end end z = ncread(&amp;#39;1.nc&amp;#39;,&amp;#39;so&amp;#39;); xyz = cell(3721,1) for i = 1:61 for j = 1:61 xyz{61*(i-1)+j,1} = xy{i,j} end end so = (3721:1); for i = 1:61 for j = 1:61 so(61*(i-1)+j,1) = z(i,j) end end A = cell(3721,1) for cont = 1:3721 A{cont,1} = [xyz{cont,1},so(cont,1)] end %xlswrite(&amp;#39;salinity.</description>
    </item>
    
    <item>
      <title>灰度共生矩阵（GLCM）进行生物量回归</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E7%81%B0%E5%BA%A6%E5%85%B1%E7%94%9F%E7%9F%A9%E9%98%B5glcm%E8%BF%9B%E8%A1%8C%E7%94%9F%E7%89%A9%E9%87%8F%E5%9B%9E%E5%BD%92/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E7%81%B0%E5%BA%A6%E5%85%B1%E7%94%9F%E7%9F%A9%E9%98%B5glcm%E8%BF%9B%E8%A1%8C%E7%94%9F%E7%89%A9%E9%87%8F%E5%9B%9E%E5%BD%92/</guid>
      <description>1.通过matlab选择不同滑动窗口，获得灰度共生矩阵，并求得常用的一些参数，如熵，能量，同质性等（11张照片，每张照片4个特征参数） 2.通过python建模（Random Forest）进行简单回归，得到预测生物量及R方 注： matlab主要应用graycomatrix及graycoprops
RF代码如下
import pandas as pd import numpy as np from sklearn.model_selection import train_test_split import matplotlib.pyplot as plt #from sklearn import metrics from sklearn.metrics import r2_score from sklearn.ensemble import RandomForestRegressor from sklearn.model_selection import GridSearchCV seaweed_data = pd.read_csv(r&amp;#39;F:\biomass_feature.csv&amp;#39;, error_bad_lines=False) X = seaweed_data.drop([&amp;#34;biomass&amp;#34;], axis=1) y = seaweed_data[&amp;#34;biomass&amp;#34;] x_train, x_test, y_train, y_test = train_test_split(X, y, random_state=0) param_grid = { &amp;#39;n_estimators&amp;#39;: [5, 10, 20, 50, 100, 200],#决策树个数 &amp;#39;max_depth&amp;#39;: [3, 5, 7, 9],#最大树深 &amp;#39;max_features&amp;#39;: [0.</description>
    </item>
    
  </channel>
</rss>
