<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据与方法</title>
    <link>https://IMchenjianqu.github.io/</link>
    <description>Recent content on 数据与方法</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 12 Dec 2020 14:46:53 +0800</lastBuildDate><atom:link href="https://IMchenjianqu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>关于IMchenjianqu</title>
      <link>https://IMchenjianqu.github.io/about-hugo/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/about-hugo/</guid>
      <description>常用数据及方法的聚合
It makes use of a variety of open source projects including:</description>
    </item>
    
    <item>
      <title>SVM实现（python）</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svm/</link>
      <pubDate>Sat, 12 Dec 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svm/</guid>
      <description>通过python实现支持向量机实现——以高光谱数据为例
准备测试集数据后，运行训练模型，获得文件out_test_y.txt；准备训练集数据运行，训练函数，获得文件out_y_pred.txt。两文本文件中有对应的数据及分类号，通过对比，直观体现精度 通过运行Data Prepare准备训练集集数据
import pandas as pd import numpy as np import os import joblib def file_name(file_dir): #读取当前文件下的所有文件 for root, dirs, files in os.walk(file_dir): # print(root) #当前目录路径 # print(dirs) #当前路径下所有子目录 return files #当前路径下所有非目录子文件 def Data_prepare_non(label):#输入的是你的探测器的编号，非归一化。 file_list = file_name(&amp;#39;./data/&amp;#39;+label) print(file_list) hstack_list = [] for i in file_list: data = pd.read_excel(&amp;#39;./data/&amp;#39;+label+&amp;#39;/&amp;#39;+i) # max_min_scaler = lambda x : (x-np.min(x))/(np.max(x)-np.min(x))#归一化到（0，1）之间的函数 data_column = list(data.columns)#获取exexl中各个列名 hstack_list.append(np.array(data[[data_column[1]]]).reshape(1,-1)) x = hstack_list[0] for i in range(1,len(file_list)): x = np.</description>
    </item>
    
    <item>
      <title>假设检验</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/</link>
      <pubDate>Sat, 12 Dec 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/</guid>
      <description>Z检验
对比检验两次考试成绩，验证是否有所提高；对比试验前后病人的症状，证明某种药是否有效。这些都属于两均值对比的应用。</description>
    </item>
    
    <item>
      <title>基于机器学习的遥感图像道路提取</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%9F%BA%E4%BA%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E9%81%93%E8%B7%AF%E6%8F%90%E5%8F%96/</link>
      <pubDate>Sat, 12 Dec 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%9F%BA%E4%BA%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E9%81%93%E8%B7%AF%E6%8F%90%E5%8F%96/</guid>
      <description>已做成视频 https://www.bilibili.com/video/BV1Tz4y1d7J9/</description>
    </item>
    
    <item>
      <title>海洋数据</title>
      <link>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%B5%B7%E6%B4%8B%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sat, 12 Dec 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/%E6%B5%B7%E6%B4%8B%E6%95%B0%E6%8D%AE/</guid>
      <description>登陆 https://marine.copernicus.eu/寻找适合数据 （其中包括0.083°×0.083°分辨率的海水温度、盐度、流速，有效波高、风速等，0.5°×0.5°的叶绿素a、透明度等数据）
范围为global，时间为present(2000（不等）-present)
选择合适范围、时间、水层后，下载数据
若为模式数据model,分别通过以下IDL读取
读取海流
pro readcurrent,inpath,x1,x2,y1,y2,outpath unit=10 unitAVG=1 openr,unit,inpath path=&amp;#39;&amp;#39; readf,unit,path pathList=[path] while ~EOF(unit ) do begin readf,unit,path if(strlen(path)gt 1) then begin pathList=[pathList,path] endif else begin ; pathList=[path] endelse endwhile free_lun,unit unit=12 openw,unit,outpath,/GET_LUN printf,unit,&amp;#34;date,year,month,day,lon,lat,current_speed,current_direction,U,V&amp;#34; for i=0,N_ELEMENTS(pathList)-1 do begin print,pathList[i] ; readOneSSH,pathList[i],x1,x2,y1,y2,unit print,pathList[i] endfor free_LUN,unit end function GetRad,u,v if(u eq 0) then begin if(v gt 0) then begin return, 3.1415926/2.0 endif else begin return, 3.1415926/2.0*3.0 endelse endif else begin tn=atan(v/u) if(u gt 0) then begin return, tn lt 0?</description>
    </item>
    
    <item>
      <title>软间隔SVM算法</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svm%E7%AE%97%E6%B3%95soft-margin/</link>
      <pubDate>Sat, 12 Dec 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svm%E7%AE%97%E6%B3%95soft-margin/</guid>
      <description>SVM(support vector machine)支持向量机
硬间隔（hard margin）SVM
区别于硬间隔（hard-margin）算法，软间隔SVM引入一个松弛变量ξ，使SVM算法适用范围更广。</description>
    </item>
    
    <item>
      <title>python库下载</title>
      <link>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/python%E5%BA%93/</link>
      <pubDate>Wed, 12 Aug 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%95%B0%E6%8D%AE/python%E5%BA%93/</guid>
      <description>为了方便自己看各种原料的用量及基本步骤，收集一些简化版的菜谱在此
 1.可通过pycharm的设置setting下载（无法看见进度条）
2.cmd运行
pip install 库 当出现python不是内部命令时，可尝试
python -m pip install 库 部分库下速度较慢，会导致失败 可多次尝试，或通过pip https://d.serctl.com/ 或通过国内资源pip https://cloud.tencent.com/developer/article/1566871 等
python -m pip install 库 网址 3.通过运行以下代码
import os libs = { &amp;#34;requests&amp;#34;,&amp;#34;jieba&amp;#34;,&amp;#34;beautifulsoup4&amp;#34;,\ &amp;#34;django&amp;#34;,&amp;#34;flask&amp;#34;,\ &amp;#34;此处填写需要下载的库的名称&amp;#34;,&amp;#34;pandas&amp;#34; } try: for lib in libs: os.system(&amp;#39;pip install &amp;#39;+lib) print(&amp;#34;Successful&amp;#34;) except: print(&amp;#39;error&amp;#39;) </description>
    </item>
    
    <item>
      <title>主成分分析（PCA）</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90pca/</link>
      <pubDate>Wed, 12 Aug 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90pca/</guid>
      <description>主成分分析，是指通过正交变换将一组可能存在相关性的变量转换为一组线性不相关的变量，转换后的这组变量叫主成分，是一个无量纲值。
通过excel进行主成分分析 （实际为求数据的特征向量与特征根）
录入一组数据，通过下式进行标准化
由此可知，如果仅取第一主成分，可反映原来数据85.28%的信息，虽然丢弃第二主成分（14.72%的信息），但变量自由度减少一个。
通过特征变量转换，将标准化处理后的数据X，转换为第一主成分z1第二主成分z2 主成分z1即可代表原来数据中85%的信息。</description>
    </item>
    
    <item>
      <title>典型相关性分析（CCA）</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%85%B8%E5%9E%8B%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 12 Aug 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%85%B8%E5%9E%8B%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/</guid>
      <description></description>
    </item>
    
    <item>
      <title>决策树分析</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%86%B3%E7%AD%96%E6%A0%91%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 12 Aug 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%86%B3%E7%AD%96%E6%A0%91%E5%88%86%E6%9E%90/</guid>
      <description>计算信息熵、信息增益 </description>
    </item>
    
  </channel>
</rss>
