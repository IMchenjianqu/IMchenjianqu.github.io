<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>方法s on 数据与方法</title>
    <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/</link>
    <description>Recent content in 方法s on 数据与方法</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 12 Dec 2020 14:46:53 +0800</lastBuildDate><atom:link href="https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SVM实现（python）</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svm/</link>
      <pubDate>Sat, 12 Dec 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svm/</guid>
      <description>通过python实现支持向量机实现——以高光谱数据为例
准备测试集数据后，运行训练模型，获得文件out_test_y.txt；准备训练集数据运行，训练函数，获得文件out_y_pred.txt。两文本文件中有对应的数据及分类号，通过对比，直观体现精度 通过运行Data Prepare准备训练集集数据
import pandas as pd import numpy as np import os import joblib def file_name(file_dir): #读取当前文件下的所有文件 for root, dirs, files in os.walk(file_dir): # print(root) #当前目录路径 # print(dirs) #当前路径下所有子目录 return files #当前路径下所有非目录子文件 def Data_prepare_non(label):#输入的是你的探测器的编号，非归一化。 file_list = file_name(&amp;#39;./data/&amp;#39;+label) print(file_list) hstack_list = [] for i in file_list: data = pd.read_excel(&amp;#39;./data/&amp;#39;+label+&amp;#39;/&amp;#39;+i) # max_min_scaler = lambda x : (x-np.min(x))/(np.max(x)-np.min(x))#归一化到（0，1）之间的函数 data_column = list(data.columns)#获取exexl中各个列名 hstack_list.append(np.array(data[[data_column[1]]]).reshape(1,-1)) x = hstack_list[0] for i in range(1,len(file_list)): x = np.</description>
    </item>
    
    <item>
      <title>假设检验</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/</link>
      <pubDate>Sat, 12 Dec 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/</guid>
      <description>Z检验
对比检验两次考试成绩，验证是否有所提高；对比试验前后病人的症状，证明某种药是否有效。这些都属于两均值对比的应用。
均值对比的假设检验方法主要有Z检验和T检验，它们的区别在于Z检验面向总体数据和大样本数据，而T检验适用于小规模抽样样本。下面分别介绍Z检验和T检验。
test3</description>
    </item>
    
    <item>
      <title>基于机器学习的遥感图像道路提取</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%9F%BA%E4%BA%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E9%81%93%E8%B7%AF%E6%8F%90%E5%8F%96/</link>
      <pubDate>Sat, 12 Dec 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%9F%BA%E4%BA%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E9%81%93%E8%B7%AF%E6%8F%90%E5%8F%96/</guid>
      <description>通过python实现支持向量机实现——以高光谱数据为例
准备测试集数据后，运行训练模型，获得文件out_test_y.txt；准备训练集数据运行，训练函数，获得文件out_y_pred.txt。两文本文件中有对应的数据及分类号，通过对比，直观体现精度 通过运行Data Prepare准备训练集集数据
import pandas as pd import numpy as np import os import joblib def file_name(file_dir): #读取当前文件下的所有文件 for root, dirs, files in os.walk(file_dir): # print(root) #当前目录路径 # print(dirs) #当前路径下所有子目录 return files #当前路径下所有非目录子文件 def Data_prepare_non(label):#输入的是你的探测器的编号，非归一化。 file_list = file_name(&amp;#39;./data/&amp;#39;+label) print(file_list) hstack_list = [] for i in file_list: data = pd.read_excel(&amp;#39;./data/&amp;#39;+label+&amp;#39;/&amp;#39;+i) # max_min_scaler = lambda x : (x-np.min(x))/(np.max(x)-np.min(x))#归一化到（0，1）之间的函数 data_column = list(data.columns)#获取exexl中各个列名 hstack_list.append(np.array(data[[data_column[1]]]).reshape(1,-1)) x = hstack_list[0] for i in range(1,len(file_list)): x = np.</description>
    </item>
    
    <item>
      <title>软间隔SVM算法</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svm%E7%AE%97%E6%B3%95soft-margin/</link>
      <pubDate>Sat, 12 Dec 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/svm%E7%AE%97%E6%B3%95soft-margin/</guid>
      <description>区别于硬间隔（hard-margin）算法，软间隔SVM引入一个松弛变量ξ，使SVM算法适用范围更广。
test3</description>
    </item>
    
    <item>
      <title>介绍</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/creating-a-new-theme/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/creating-a-new-theme/</guid>
      <description>介绍 This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>主成分分析（PCA）</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90pca/</link>
      <pubDate>Wed, 12 Aug 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90pca/</guid>
      <description>通过matlab绘制韦恩图
两两叠加
 xp = linspace(-1,1,256); x = ones(size(xp))&amp;#39;*xp; y = xp&amp;#39;*ones(size(xp)); a = sqrt((x+0.3).^2+y.^2)&amp;lt;0.6; b = sqrt((x-0.3).^2+y.^2)&amp;lt;0.6; r1 = max(find(xp&amp;lt;-0.7)); r2 = min(find(xp&amp;gt;0.7)); a = a(r1:r2,:); b = b(r1:r2,:); % generate outlined box sz = size(a); u = ones(sz); u(1:2,:)=0; u(:,1:2)=0; u(sz(1)-(0:1),:)=0; u(:,sz(2)-(0:1))=0; % generate edge images se = strel(&amp;#39;disk&amp;#39;,2); ae = a - imerode(a,se); be = b - imerode(b,se); ue = double(and(u,~(ae|be))); % generate example venn diagram z = xor(a,b); rgb = cat(3,ue,ue,and(ue,~z)); imshow(rgb); 同理，三个时：</description>
    </item>
    
    <item>
      <title>决策树分析</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%86%B3%E7%AD%96%E6%A0%91%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 12 Aug 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%86%B3%E7%AD%96%E6%A0%91%E5%88%86%E6%9E%90/</guid>
      <description>通过matlab绘制韦恩图
两两叠加
 xp = linspace(-1,1,256); x = ones(size(xp))&amp;#39;*xp; y = xp&amp;#39;*ones(size(xp)); a = sqrt((x+0.3).^2+y.^2)&amp;lt;0.6; b = sqrt((x-0.3).^2+y.^2)&amp;lt;0.6; r1 = max(find(xp&amp;lt;-0.7)); r2 = min(find(xp&amp;gt;0.7)); a = a(r1:r2,:); b = b(r1:r2,:); % generate outlined box sz = size(a); u = ones(sz); u(1:2,:)=0; u(:,1:2)=0; u(sz(1)-(0:1),:)=0; u(:,sz(2)-(0:1))=0; % generate edge images se = strel(&amp;#39;disk&amp;#39;,2); ae = a - imerode(a,se); be = b - imerode(b,se); ue = double(and(u,~(ae|be))); % generate example venn diagram z = xor(a,b); rgb = cat(3,ue,ue,and(ue,~z)); imshow(rgb); 同理，三个时：</description>
    </item>
    
    <item>
      <title>基于随机森林模型的手写图像识别</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%9F%BA%E4%BA%8E%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%89%8B%E5%86%99%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/</link>
      <pubDate>Wed, 12 Aug 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%9F%BA%E4%BA%8E%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%89%8B%E5%86%99%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/</guid>
      <description>通过matlab绘制韦恩图
两两叠加
 xp = linspace(-1,1,256); x = ones(size(xp))&amp;#39;*xp; y = xp&amp;#39;*ones(size(xp)); a = sqrt((x+0.3).^2+y.^2)&amp;lt;0.6; b = sqrt((x-0.3).^2+y.^2)&amp;lt;0.6; r1 = max(find(xp&amp;lt;-0.7)); r2 = min(find(xp&amp;gt;0.7)); a = a(r1:r2,:); b = b(r1:r2,:); % generate outlined box sz = size(a); u = ones(sz); u(1:2,:)=0; u(:,1:2)=0; u(sz(1)-(0:1),:)=0; u(:,sz(2)-(0:1))=0; % generate edge images se = strel(&amp;#39;disk&amp;#39;,2); ae = a - imerode(a,se); be = b - imerode(b,se); ue = double(and(u,~(ae|be))); % generate example venn diagram z = xor(a,b); rgb = cat(3,ue,ue,and(ue,~z)); imshow(rgb); 同理，三个时：</description>
    </item>
    
    <item>
      <title>层次分析（AHP）</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90ahp/</link>
      <pubDate>Wed, 12 Aug 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90ahp/</guid>
      <description>通过matlab绘制韦恩图
两两叠加
 xp = linspace(-1,1,256); x = ones(size(xp))&amp;#39;*xp; y = xp&amp;#39;*ones(size(xp)); a = sqrt((x+0.3).^2+y.^2)&amp;lt;0.6; b = sqrt((x-0.3).^2+y.^2)&amp;lt;0.6; r1 = max(find(xp&amp;lt;-0.7)); r2 = min(find(xp&amp;gt;0.7)); a = a(r1:r2,:); b = b(r1:r2,:); % generate outlined box sz = size(a); u = ones(sz); u(1:2,:)=0; u(:,1:2)=0; u(sz(1)-(0:1),:)=0; u(:,sz(2)-(0:1))=0; % generate edge images se = strel(&amp;#39;disk&amp;#39;,2); ae = a - imerode(a,se); be = b - imerode(b,se); ue = double(and(u,~(ae|be))); % generate example venn diagram z = xor(a,b); rgb = cat(3,ue,ue,and(ue,~z)); imshow(rgb); 同理，三个时：</description>
    </item>
    
    <item>
      <title>韦恩图（matlab）</title>
      <link>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E9%9F%A6%E6%81%A9%E5%9B%BEmatlab/</link>
      <pubDate>Wed, 12 Aug 2020 14:46:53 +0800</pubDate>
      
      <guid>https://IMchenjianqu.github.io/%E6%96%B9%E6%B3%95/%E9%9F%A6%E6%81%A9%E5%9B%BEmatlab/</guid>
      <description>通过matlab绘制韦恩图
两两叠加
 xp = linspace(-1,1,256); x = ones(size(xp))&amp;#39;*xp; y = xp&amp;#39;*ones(size(xp)); a = sqrt((x+0.3).^2+y.^2)&amp;lt;0.6; b = sqrt((x-0.3).^2+y.^2)&amp;lt;0.6; r1 = max(find(xp&amp;lt;-0.7)); r2 = min(find(xp&amp;gt;0.7)); a = a(r1:r2,:); b = b(r1:r2,:); % generate outlined box sz = size(a); u = ones(sz); u(1:2,:)=0; u(:,1:2)=0; u(sz(1)-(0:1),:)=0; u(:,sz(2)-(0:1))=0; % generate edge images se = strel(&amp;#39;disk&amp;#39;,2); ae = a - imerode(a,se); be = b - imerode(b,se); ue = double(and(u,~(ae|be))); % generate example venn diagram z = xor(a,b); rgb = cat(3,ue,ue,and(ue,~z)); imshow(rgb); 同理，三个时：</description>
    </item>
    
  </channel>
</rss>
